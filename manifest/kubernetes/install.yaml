apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-resource-tracker
    app.kubernetes.io/part-of: aargocd-resource-tracker
  name: argocd-resource-tracker-controller
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-resource-tracker
    app.kubernetes.io/part-of: aargocd-resource-tracker
  name: resource-relation-lookup
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-resource-tracker
  labels:
    app: argocd-resource-tracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argocd-resource-tracker
  template:
    metadata:
      labels:
        app: argocd-resource-tracker
    spec:
      containers:
      - name: argocd-resource-tracker
        image: quay.io/mangaal/argocd-resource-tracker:test-v1@sha256:5cb7b7c91a2d0e09e9ac9555cb897ee3e83120e90bf01bb9f66e950b6ea417c2
        imagePullPolicy: Always
        args: 
        - run
        - --loglevel=debug
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "250m"
            memory: "256Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault  
        volumeMounts:    
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls 
      serviceAccountName: argocd-resource-tracker-controller   
      volumes:
        - name: argocd-repo-server-tls
          secret:
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls     
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-resource-tracker
    app.kubernetes.io/part-of: aargocd-resource-tracker
  name: argocd-resource-tracker-clusterrole
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-resource-tracker
    app.kubernetes.io/part-of: aargocd-resource-tracker
  name: argocd-resource-tracker-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: argocd-resource-tracker-controller
    namespace: argocd
roleRef:
  kind: ClusterRole
  name: argocd-resource-tracker-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-resource-tracker
    app.kubernetes.io/part-of: aargocd-resource-tracker
  name: argocd-resource-tracker-role
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "update", "create"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-resource-tracker
    app.kubernetes.io/part-of: aargocd-resource-tracker
  name: argocd-resource-tracker-rolebinding
subjects:
  - kind: ServiceAccount
    name: argocd-resource-tracker-controller
roleRef:
  kind: Role
  name: argocd-resource-tracker-role
  apiGroup: rbac.authorization.k8s.io
